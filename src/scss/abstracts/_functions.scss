// -----------------------------------------------------------------------------
// This file contains all application-wide Sass functions.
// -----------------------------------------------------------------------------

/// Native `url(..)` function wrapper
/// @param {String} $base - base URL for the asset
/// @param {String} $type - asset type folder (e.g. `fonts/`)
/// @param {String} $path - asset path
/// @return {Url}

@function asset($base, $type, $path) {
	@return url($base + $type + $path);
}

/// Returns URL to an image based on its path
/// @param {String} $path - image path
/// @param {String} $base [$base-url] - base URL
/// @return {Url}
/// @require $base-url
@function image($path, $base: $base-url) {
	@return asset($base, "images/", $path);
}

/// Returns URL to a font based on its path
/// @param {String} $path - font path
/// @param {String} $base [$base-url] - base URL
/// @return {Url}
/// @require $base-url
@function font($path, $base: $base-url) {
	@return asset($base, "fonts/", $path);
}

.tdbc-content-maxlength {
	max-width: 80ch;
}

$tdbc-alignments: left, center, right !default;

@each $alignment in $tdbc-alignments {
	.tdbc-text-align--#{$alignment} {
		text-align: #{$alignment};

		@if $alignment == "center" {
			> a {
				align-self: center !important;
			}
		}
	}
}

@each $key in $tdbc-background-colors {
	.tdbc-background--#{$key} {
		background-color: tdbc-color($key);
	}
}

@each $key in $tdbc-ink-colors {
	.tdbc-ink--#{$key},
	a.tdbc-ink--#{$key} {
		color: tdbc-color(#{$key});
	}

	.tdbc-ink--#{$key} > a:not(.tdbc-button) {
		color: inherit;
	}
}

.tdbc-mx-auto {
	margin-right: auto;
	margin-left: auto;
}

@each $key, $unit in $tdbc-spacing {
	.tdbc-mt-#{$key} {
		margin-top: $unit;
	}
}

.tdbc-mb-none {
	margin: 0;
}
